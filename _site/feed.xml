<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-09-11T00:12:38+09:00</updated><id>http://localhost:4000/</id><title type="html">Jingyu playground</title><subtitle></subtitle><author><name>Jingyu</name><email>kjingyu91@gmail.com</email></author><entry><title type="html">[git] 자주 쓰는 git명령어</title><link href="http://localhost:4000/git-%EC%9E%90%EC%A3%BC-%EC%93%B0%EB%8A%94-git%EB%AA%85%EB%A0%B9%EC%96%B4/" rel="alternate" type="text/html" title="[git] 자주 쓰는 git명령어" /><published>2017-09-08T00:00:00+09:00</published><updated>2017-09-08T00:00:00+09:00</updated><id>http://localhost:4000/%5Bgit%5D%20%EC%9E%90%EC%A3%BC%20%EC%93%B0%EB%8A%94%20git%EB%AA%85%EB%A0%B9%EC%96%B4</id><content type="html" xml:base="http://localhost:4000/git-%EC%9E%90%EC%A3%BC-%EC%93%B0%EB%8A%94-git%EB%AA%85%EB%A0%B9%EC%96%B4/">&lt;h2 id=&quot;커밋-되돌리기&quot;&gt;커밋 되돌리기&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git reset HEAD^&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;이 명령을 사용하면 커밋 하나를 되돌릴 수 있다. 두개를 되돌리려면&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git reset HEAD~2&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;원격-레포-커밋-되돌리기&quot;&gt;원격 레포 커밋 되돌리기&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git push origin +ios&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;이렇게 +를 붙여주면 경고는 무시하고 데이터가 손실되도 push한다.&lt;/p&gt;

&lt;h2 id=&quot;commit했었던-곳으로-돌아가기&quot;&gt;commit했었던 곳으로 돌아가기&lt;/h2&gt;
&lt;p&gt;먼저&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git reflog&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;로 해당 HEAD번호를 확인한다.
￼&lt;/p&gt;

&lt;p&gt;ex) 배너 예외처리로 돌아가기&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post2/image1.png?raw=true&amp;quot;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git reset —hard HEAD@{21}&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;원격-파일-삭제하기&quot;&gt;원격 파일 삭제하기&lt;/h2&gt;

&lt;p&gt;.gitignore를 올리기전에 xcuserstate 를 원격지로 푸시했다.
이후에 필요없는 breakPoint같은 파일이 자꾸 깃 스테이지에 올라간다.&lt;/p&gt;

&lt;p&gt;원격 저장소에 있는 파일을 지우려면 git 명령어를 통해 삭제 후 푸시를 해줘야 한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git rm —cached [flileName]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;git rm 은 로컬과 원격을 모두 삭제하므로 —cached를 꼭 붙여줘야 한다.&lt;/p&gt;</content><author><name>Jingyu</name><email>kjingyu91@gmail.com</email></author><summary type="html">커밋 되돌리기 $ git reset HEAD^</summary></entry><entry><title type="html">[ios] status bar 다루기</title><link href="http://localhost:4000/ios-status-bar-%EB%8B%A4%EB%A3%A8%EA%B8%B0/" rel="alternate" type="text/html" title="[ios] status bar 다루기" /><published>2017-08-19T00:00:00+09:00</published><updated>2017-08-19T00:00:00+09:00</updated><id>http://localhost:4000/%5Bios%5D%20status%20bar%20%EB%8B%A4%EB%A3%A8%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/ios-status-bar-%EB%8B%A4%EB%A3%A8%EA%B8%B0/">&lt;h2 id=&quot;status-bar&quot;&gt;status bar&lt;/h2&gt;

&lt;p&gt;ios에서 상태바를 커스터마이징 가능한 부분은 상태바의 백그라운드 색상변경(아무색이나 가능)과 상태바 안의 텍스트 색상변경(하얀색 or 검정색으로 제한)
이다.&lt;/p&gt;

&lt;p&gt;글자색도 변경해보고 싶어지만 애플가이드라인에서는 밝은 배경일때 검은색 텍스트 / 어두운 배경일때 하얀 텍스트를 쓰라고 권장하고 있는 부분이다.
(알록달록한 색상은 불가능함)&lt;/p&gt;

&lt;h3 id=&quot;상태바-백그라운드-색상-변경하기&quot;&gt;상태바 백그라운드 색상 변경하기&lt;/h3&gt;

&lt;p&gt;상태바 백그라운드 색상은 뷰를 만들어서 addSubView 하는 방법과 “statusBar” key로 상태바를 get해서 바꾸는 방법이 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let statusBar = UIView(frame: CGRect(x: 0, y: 0, width: UIScreen.main.bounds.width, height: 20))
        statusBar.backgroundColor = .green // 원하는 색상 지정
        window?.rootViewController?.view.addSubview(statusBar)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;extension UIApplication {
    var statusBarView: UIView? {
        return value(forKey: &quot;statusBar&quot;) as? UIView
    }
}

// insert code in AppDelegate
UIApplication.shared.statusBarView?.backgroundColor = .black

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;상태바 백그라운드 색상변경은 비교적 간단하니 이정도로 넘어가고 텍스트 변경을 해보자.&lt;/p&gt;

&lt;p&gt;텍스트 변경은 잘못 접근하면 잘 먹히지가 않아서 정리를 제대로 해둬야겠다고 생각했다.&lt;/p&gt;

&lt;h3 id=&quot;상태바-텍스트-변경하기&quot;&gt;상태바 텍스트 변경하기&lt;/h3&gt;

&lt;p&gt;상태바를 원하는대로 바꾸기 위해서는 info.plist의 속성설정에 따라 두가지 종류로 나눌 수 있다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post1/plist.png?raw=true&amp;quot;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;바로 이 속성을 NO로 지정하느냐 YES로 지정하느냐에 따라 설정하는 방법이 다르다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;case1. View controller-based status bar appearance = NO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AppDelegate - didFinishLaunchingWithOptions메서드 안에 다음 소스를 추가한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UIApplication.shared.statusBarStyle = .lightContent // white color&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UIApplication.shared.statusBarStyle = .default // black color&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;이렇게 설정을 해두면 모든 뷰컨트롤러에서 같게 세팅이 된다.&lt;/p&gt;

&lt;p&gt;info.plist에서 속성을 NO로 지정하지 않았다면 아무리 설정해봐도 먹히지 않으니
바뀌지 않는다면 plist를 다시 확인해보자.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;case2. View controller-based status bar appearance = YES&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 방식은 모든 뷰컨트롤러마다 스타일을 지정해 주어야 한다.&lt;/p&gt;

&lt;p&gt;스타일을 지정하는 방법은 이전과 다르게 UIViewController의&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var preferredStatusBarStyle: UIStatusBarStyle

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;속성을 오버라이드 해서 바꾸는 방법으로 접근해야한다.&lt;/p&gt;

&lt;p&gt;모든 ViewController가 상속받는 base ViewController가 있다면 여기에 설정해 놓는 것이 수월하다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    var statusBarStyle: UIStatusBarStyle = .lightContent { didSet { setNeedsStatusBarAppearanceUpdate() } }
    
    override var preferredStatusBarStyle: UIStatusBarStyle {
        return statusBarStyle
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Navigation 뷰컨을 쓴다면 확장해서 설정한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;extension UINavigationController {
    
    override open var preferredStatusBarStyle: UIStatusBarStyle {
        return .lightContent
    }
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;status bar color&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;status bar text color
text 색상은 white와 black 두 종류로만 바꿀 수 있다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jingyu</name><email>kjingyu91@gmail.com</email></author><summary type="html">status bar</summary></entry></feed>